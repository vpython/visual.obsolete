How to build Visual for Microsoft Windows

If you find gaps in this information, please tell Bruce_Sherwood@ncsu.edu.

Note: In source code, _WIN32 is a flag set by the MinGW compiler,
and _MSC_VER is a flag set by the Microsoft Visual Studio compiler.

(In early 2007 there was experimentation with using Visual Studio
to build Visual, but this is not being used at present. See the
VCBuild directory.)

Download and install MinGW, MSYS, and MSYS-DTK packages from
www.mingw.org. Also download the MinGW Utils package (version 0.1 or
higher). You may need to add C:\mingw\bin to your PATH.
You will also need to install msys-automake, msys-autoconf, and msys-libtool.

Download and install Python 2.5.x from www.python.org.
OpenGL is provided with the standard Windows installation.

Download and install numpy (http://numpy.scipy.org).

Copy Python25's libs/libpython25.a to /mingw/lib.
See http://www.python.org/doc/current/inst/tweak-flags.html for discussion.

Download a precompiled version of the 'bjam' tool from www.boost.org 
and place it into C:\mingw\bin (or anywhere else on your PATH).

Download latest Boost (1.33.1) from www.boost.org.
> tar -xjf boost_1_33_1.tar.bz2
> cd boost_1_33_1
> bjam -sTOOLS=mingw -sMINGW_BIN_DIRECTORY=/c/MinGW/bin -sPYTHON_ROOT=/c/Python25 -sPYTHON_VERSION=2.5 stage
May take about an hour to build everything.
Copy boost_1_33_1/boost folder to mingw/include:
> cp -r boost/ /mingw/include/

> cp stage/lib/boost_thread-mgw-mt-1_33_1.dll /mingw/bin
> cp stage/lib/boost_thread-mgw-mt-1_33_1.lib /mingw/lib/libboost_thread.a
> cd bin/boost/libs/python/build/boost_python.dll/mingw/release/threading-multi/
> cp boost_python-mgw-mt-1_33_1.dll /mingw/bin
> cp boost_python-mgw-mt-1_33_1.lib /mingw/lib/libboost_python25.a 

Note: The Boost files that start with "libboost" are static libraries that we don't use.

Download the binary installer for the development version of gtk+ and install into C:\MinGW.
At http://gladewin32.sourceforge.net, you need the development version, which includes
such things as glib, atk, pango, cairo, glade, and fontconfig.

Download the binary installer for the development version of gtkmm and install into C:\MinGW.
At http://ftp.gnome.org/pub/gnome/binaries/win32 in the gtkmm directory, you
need gtkmm-win32-devel-xxxx.exe.

gtk+ (also called gtk2) is written in C; gtkmm is a "wrapper" of these C routines to make gtk+
functionality accessible to C++ programmers.

Download the zip files for gtkglext and gtkglextmm and unzip them. To build them, go
into a directory, and do this:
		> ./configure --prefix=/mingw
		> make
		> make install

See INSTALL.txt for further information on the build process itself.

Some of the following is probably is now installed by the gtk2 and gtkmm installers.
After installing gtk2 and gtkmm, check to see whether you have these packages.
 		Download pkg-config-0.20 in zip format and unzip.
		One place to get it is http://www.gimp.org/~tml/gimp/win32/downloads.html.
		Note that if you don't already have it, you  need glib-2.1.27.zip available here.
		And glib in turn requires libiconv and gettext, also available at the same location.
		These are binary distributions; after unzipping, copy files to the corresponding
		locations in mingw.
		
		A library such as sigc++, see below,
		registers its version number in mingw/lib/pkgconfig/sigc++-2.0.pc, which makes it
		possible for the build process to find the installed version of the library.
		There is some ambiguity about where to put the pkg-config pieces, as some components need
		to be in msys. Copy pkg-config.exe to mingw/bin and pkg.m4 to mingw/share/aclocal
		but also to msys/1.0/share/aclocal.
		You probably also need to set an environment variable for pkg-config:
		Right click My Computer > Properties > Advanced > Environment Variables and
		add a new entry: name PKG_CONFIG_PATH, value c:\mingw\lib\pkgconfig.
		NOTE: You can run "env" in an MSYS terminal to check that the path is appropriate. 
		
		Download the source for libsigc++-2.0.17 from libsigc.sourceforge.net.
		> tar -xjf libsigc++-2.0.17.tar.bz2
		cd to the new directory, execute 
		> ./configure --prefix=/mingw
		> make
		> make install
		Can test that pkg-config is correctly installed by executing this:
		> pkg-config --cflags sigc++-2.0cd


