from math import pi, cos, sin, sqrt
from Polygon import Polygon
from Polygon.Shapes import Star

def rectangle(pos=(0,0), length=1.0, height=None):
        if height == None: height = length
        p0 = (pos[0]-length/2.0, pos[1]-height/2.0)
        p1 = (pos[0]-length/2.0, pos[1]+height/2.0)
        p2 = (pos[0]+length/2.0, pos[1]+height/2.0)
        p3 = (pos[0]+length/2.0, pos[1]-height/2.0)
        p4 = (pos[0]-length/2.0, pos[1]-height/2.0)
        return Polygon([p0, p1, p2, p3, p4])

def circle(pos=(0,0), radius=0.5, np=32):
        cp = []
        seg = 2.0*pi/np
        angle = 0
        for i in range(np):
            x = radius*cos(angle) + pos[0]
            y = radius*sin(angle) + pos[1]
            cp.append((x,y))
            angle += seg
        cp.append(cp[0])
        return Polygon(cp)

def ellipse(pos=(0,0), length=1.0, height=None, np=32):
        if height == None: height = length
        cp = []
        seg = 2.0*pi/np
        angle = 0
        radius=0.5
        lf = length/(radius*2)
        hf = height/(radius*2)
        for i in range(np):
            x = radius*cos(angle)*lf + pos[0]
            y = radius*sin(angle)*hf + pos[1]
            cp.append((x,y))
            angle += seg
        cp.append(cp[0])
        return Polygon(cp)
        
def ngon(pos=(0,0), n=3, radius=1.0, rotate=0.0):
        cp = []
        if n < 3: return None
        seg = 2.0*pi/n
        angle = rotate
        for i in range(n):
            x = radius*cos(angle) + pos[0]
            y = radius*sin(angle) + pos[1]
            cp.append((x,y))
            angle += seg
        cp.append(cp[0])
        return Polygon(cp)

def triangle(pos=(0,0), length=1.0, rotate=0.0):
    tri = ngon(pos=pos, n=3, radius=length/sqrt(3), rotate=rotate-pi/6.0)
    return Polygon(tri)

def hexagon(pos=(0,0), length=1.0, rotate=0.0):
    hxg = ngon(pos=pos, n=6, radius=length, rotate=rotate)
    return Polygon(hxg)

def pentagon(pos=(0,0), length=1.0, rotate=0.0):
    pen = ngon(pos=pos, n=5, radius=length/1.176, rotate=rotate+pi/10)
    return Polygon(pen)

def star(pos=(0,0), radius=1.0, beams=5, iradius=0.5, bscale=1.0, ccaxis=1, ccolor=-1, material=None):
    pstar = Star(radius=radius, center=pos, beams=beams, iradius=iradius)
    sc = pstar[0]
    sc.append(sc[0])
    return Polygon(sc)

def rbox(pos=(0,0), length=1.0, height=None, roundness=0.1):
    if height == None: height = length
    radius = height*roundness
    ll = length - 2*radius
    hh = height - 2*radius
    cp = []
    def qcircle(cp, pos, angle, radius, np):
        seg = pi/np/2.0
        for i in range(np):
            x = radius*cos(angle) + pos[0]
            y = -radius*sin(angle) + pos[1]
            cp.append((x,y))
            angle += seg
        return cp
    p0 = (pos[0]-ll/2.0, pos[1]-height/2.0)
    cp.append(p0)
    round1 = qcircle(cp, (p0[0],p0[1]+radius), pi/2.0, radius, 8)
    p1 = (pos[0]-length/2.0, pos[1]+hh/2.0)
    cp.append(p1)
    round2 = qcircle(cp, (p1[0]+radius,p1[1]), pi, radius, 8)
    p2 = (pos[0]+ll/2.0, pos[1]+height/2.0)
    cp.append(p2)
    round2 = qcircle(cp, (p2[0],p2[1]-radius), -pi/2.0, radius, 8)
    p3 = (pos[0]+length/2.0, pos[1]-hh/2.0)
    cp.append(p3)
    round2 = qcircle(cp, (p3[0]-radius,p3[1]), 0, radius, 8)
    cp.append(p0)
    return Polygon(cp)
